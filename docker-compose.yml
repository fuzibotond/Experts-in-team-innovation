services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8081"
    volumes:
      - ./spark:/opt/spark-apps

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8082"
    depends_on:
      - spark-master

  java-server:
    build:
      context: ../project/java-server  # Adjust this path to where your Java project is located relative to the docker-compose.yml
      dockerfile: Dockerfile  # Make sure this is the name of the Dockerfile for your Java server
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - mongo
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/data-collecting-db
  
  flask-spark-data-processing:
    build: 
      context: ../project/flask-spark-data-processing  # Adjust this path to where your Java project is located relative to the docker-compose.yml
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - spark-master
      - kafka
      - spark-worker
    volumes:
      - ./data:/opt/spark-data


  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  frontend:
    build:
      context: ../project/sensor-dashboard  # Adjust this path to where your frontend project is located relative to the docker-compose.yml
      dockerfile: Dockerfile  # Make sure this is the name of the Dockerfile for your frontend
    ports:
      - "80:80"  # Expose port 4200 for development; adjust if needed
    depends_on:
      - java-server


volumes:
  mongo-data:
