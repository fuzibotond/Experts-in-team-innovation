services:
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 # Update this line
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=2970469C-7EC0-468D-BED4-70F0765920ED
    volumes:
      - ./kafka:/bitnami/kafka

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8081"
    volumes:
      - ./spark:/opt/spark-apps

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8082"
    depends_on:
      - spark-master

  java-server:
    build:
      context: ./java-server # Adjust this path to where your Java project is located relative to the docker-compose.yml
      dockerfile: Dockerfile # Make sure this is the name of the Dockerfile for your Java server
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - mongo
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/data-collecting-db

  flask-spark-data-processing:
    build:
      context: ./flask-spark-data-processing # Adjust this path to where your Java project is located relative to the docker-compose.yml
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - spark-master
      - kafka
      - spark-worker
    volumes:
      - ./data:/opt/spark-data

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  # frontend:
  #   build:
  #     context: ./sensor-dashboard # Adjust this path to where your frontend project is located relative to the docker-compose.yml
  #     dockerfile: Dockerfile # Make sure this is the name of the Dockerfile for your frontend
  #   ports:
  #     - "80:80" # Expose port 4200 for development; adjust if needed
  #   depends_on:
  #     - java-server

volumes:
  mongo-data:
  kafka_data:
